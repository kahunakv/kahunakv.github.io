"use strict";(self.webpackChunkkahunakv_docs=self.webpackChunkkahunakv_docs||[]).push([[976],{7879:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"intro","title":"Tutorial: Key/Value Store","description":"Kahuna provides building blocks to construct distributed systems. The key/value store can be used to store configuration, service discoverability, metadata, caching, sessions, and more. Let\'s learn how it works:","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Getting Started","permalink":"/docs/getting-started"}}');var a=t(4848),i=t(8453);const r={sidebar_position:1},o="Tutorial: Key/Value Store",c={},l=[{value:"Start Kahuna",id:"start-kahuna",level:2},{value:"Setting and Retrieving Keys",id:"setting-and-retrieving-keys",level:2},{value:"Durability",id:"durability",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"tutorial-keyvalue-store",children:"Tutorial: Key/Value Store"})}),"\n",(0,a.jsxs)(n.p,{children:["Kahuna provides building blocks to construct distributed systems. The ",(0,a.jsx)(n.strong,{children:"key/value store"})," can be used to store ",(0,a.jsx)(n.strong,{children:"configuration, service discoverability, metadata, caching, sessions, and more"}),". Let's learn how it works:"]}),"\n",(0,a.jsx)(n.h2,{id:"start-kahuna",children:"Start Kahuna"}),"\n",(0,a.jsxs)(n.p,{children:["Before proceeding, ensure that Kahuna is running on your system. Check the ",(0,a.jsx)(n.a,{href:"server-installation",children:"Server Installation"})," section for instructions. Additionally, you'll need ",(0,a.jsx)(n.a,{href:"kahuna-cli",children:"Kahuna CLI"})," to execute\ncommands on the server."]}),"\n",(0,a.jsx)(n.p,{children:'After installation, execute the command "kahuna-cli" to proceed.'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"~> kahuna-cli --version\n"})}),"\n",(0,a.jsx)(n.h2,{id:"setting-and-retrieving-keys",children:"Setting and Retrieving Keys"}),"\n",(0,a.jsx)(n.p,{children:"In kahuna-cli, you can execute commands, transactions, and scripts. To set and retrieve key/values, use the following format:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'~> kahuna-cli\nKahuna Shell 0.0.1 (alpha)\n\nkahuna-cli>  set myconfig "my-value"                 \nr0 set 9ms\n\nkahuna-cli>  get myconfig                          \nr0 my-value 7ms\n\nkahuna-cli>  set myconfig "my-value-2"                 \nr1 set 7ms\n\nkahuna-cli>  get myconfig                          \nr1 my-value-2 6ms\n\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Using the ",(0,a.jsx)(n.code,{children:"set"})," command, you can store key/value pairs durably in the cluster."]}),"\n",(0,a.jsx)(n.p,{children:"Internally, based on the consistent hashing applied to the key, the request is redirected to the leader node of the corresponding Raft group, which is responsible for coordinating, achieving consensus, and ensuring durable storage and replication."}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"get"})," command, on the other hand, retrieves the latest value consistently from the correct leader node."]}),"\n",(0,a.jsx)(n.h1,{id:"expiration",children:"Expiration"}),"\n",(0,a.jsx)(n.p,{children:"Keys that are persisted to disk do not expire by default. However, if you want these keys to expire and be removed after a certain period, you can set an expiration time when creating the key or modify it later using the extend command:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'kahuna-cli>  set myconfig "my-value" ex 30000\nr2 set 181ms\n\nkahuna-cli>  set myconfig "my-value"                 \nr3 set 40ms\n\nkahuna-cli>  extend myconfig 30000              \nr3 extended 36ms\n'})}),"\n",(0,a.jsx)(n.p,{children:"Expiration times are set in milliseconds."}),"\n",(0,a.jsx)(n.h2,{id:"durability",children:"Durability"}),"\n",(0,a.jsx)(n.p,{children:"By default, durability in Kahuna is strongly consistent, meaning that all values are replicated, and the client is only notified that the operation was successful after receiving confirmation from the majority of nodes in the cluster."}),"\n",(0,a.jsx)(n.p,{children:"In some high-performance scenarios or when dealing with ephemeral data, on-disk durability may not be necessary or practical."}),"\n",(0,a.jsx)(n.p,{children:'For this reason, Kahuna offers an "ephemeral" durability mode, meaning that data is only stored in the leader node\'s volatile memory.'}),"\n",(0,a.jsx)(n.p,{children:'Commands using ephemeral durability are prefixed with "e", for example:'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'kahuna-cli> eset tempconfig "my-value"              \nr0 set 97ms\n\nkahuna-cli> eget tempconfig                         \nr0 my-value 32ms\n'})}),"\n",(0,a.jsx)(n.p,{children:"By default, volatility depends on whether the node crashes or if there is memory pressure, requiring the system to free up space by removing the least-used keys from memory. It is also possible to specify an explicit expiration for stored keys."}),"\n",(0,a.jsx)(n.p,{children:"Ephemeral storage allows for faster operations without the overhead of replication and persistence."}),"\n",(0,a.jsx)(n.h1,{id:"revisions",children:"Revisions"}),"\n",(0,a.jsx)(n.p,{children:"In the previous examples, each time a key is updated, you can see a value like r0, r1, etc., that increments.\nThis value is called the revision. A revison is a monotonic version number that tracks when a key was last modified. Every time a key is updated or deleted, its revision increments, ensuring strong consistency and strict ordering."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'kahuna-cli>  set myconf "some config"             \nr0 set 108ms\n\nkahuna-cli>  set myconf "some other config"       \nr1 set 30ms\n\nkahuna-cli>  set myconf "another config"          \nr2 set 50ms\n\nkahuna-cli>  get myconf\nr2 another config 65ms\n'})}),"\n",(0,a.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(6540);const a={},i=s.createContext(a);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);