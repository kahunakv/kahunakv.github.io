"use strict";(self.webpackChunkkahunakv_docs=self.webpackChunkkahunakv_docs||[]).push([[7063],{2536:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"scripts/control-structures","title":"Control Structures","description":"Every Kahuna script is composed of a series of statements. A statement might involve storing, reading or deleting a key/value pair, calling a function, looping through data, or making a decision with conditional logic. This section covers the different types of statements you can use.","source":"@site/docs/scripts/control-structures.md","sourceDirName":"scripts","slug":"/scripts/control-structures","permalink":"/docs/scripts/control-structures","draft":false,"unlisted":false,"editUrl":"https://github.com/kahunakv/kahunakv.github.io/tree/main/docs/scripts/control-structures.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Expressions","permalink":"/docs/scripts/expressions"},"next":{"title":"Command: Set","permalink":"/docs/scripts/commands/set"}}');var r=s(4848),i=s(8453);const o={},l="Control Structures",a={},c=[{value:"If/Else",id:"ifelse",level:2},{value:"For",id:"for",level:2},{value:"Begin/Commit/Rollback",id:"begincommitrollback",level:2},{value:"Let",id:"let",level:2},{value:"Throw",id:"throw",level:2},{value:"Return",id:"return",level:2},{value:"Sleep",id:"sleep",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"control-structures",children:"Control Structures"})}),"\n",(0,r.jsx)(n.p,{children:"Every Kahuna script is composed of a series of statements. A statement might involve storing, reading or deleting a key/value pair, calling a function, looping through data, or making a decision with conditional logic. This section covers the different types of statements you can use."}),"\n",(0,r.jsx)(n.h2,{id:"ifelse",children:"If/Else"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"if"})," construct is a fundamental feature found in most programming languages. It enables conditional execution of specific blocks of code. The basic syntax looks like this:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"if expression then\n  ...\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"expression"})," is evaluated as a boolean (",(0,r.jsx)(n.code,{children:"true"})," or ",(0,r.jsx)(n.code,{children:"false"}),"). If it evaluates to ",(0,r.jsx)(n.code,{children:"true"}),", the code inside the block is executed. If it evaluates to ",(0,r.jsx)(n.code,{children:"false"}),", the block is skipped."]}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'let candidates = get by prefix `election`\nif count(current_leader) == 0 then\n   set `election/leader` "node-A"\nend\n'})}),"\n",(0,r.jsx)(n.p,{children:"Often, you may want to perform one action when a condition is true, and a different action when it's false. That\u2019s where else comes in. The else clause extends an if statement, allowing you to specify what should happen if the condition in the if evaluates to false."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'let candidates = get by prefix `election`\nif count(current_leader) == 0 then\n   set `election/leader` "node-A"\n   return true\nelse\n   return false\nend\n'})}),"\n",(0,r.jsx)(n.h2,{id:"for",children:"For"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"for"})," loop allows a block of code to be executed ",(0,r.jsx)(n.strong,{children:"a specific number of times"})," or to ",(0,r.jsx)(n.strong,{children:"iterate over an array of values one by one"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Repeating a block a fixed number of times:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"let total = 0\nfor i in 1..10 do\n  let total = total + i\nend\n"})}),"\n",(0,r.jsx)(n.p,{children:"This loop sums the numbers from 1 to 10."}),"\n",(0,r.jsx)(n.p,{children:"Set some candidate key/values:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"set `candidates/node-a` true nx\nset `candidates/node-b` true nx\n"})}),"\n",(0,r.jsx)(n.p,{children:"Iterating over an array of values:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'let candidates = get by prefix "candidates"\nfor candidate in candidates do\n  set `services/email/leader` candidate\n  return true\nend\nthrow "no candidates found"\n'})}),"\n",(0,r.jsx)(n.p,{children:"In this example, the loop looks for a valid candidate. As soon as it finds one, it sets a value and exits. If no candidates are found, it throws an error."}),"\n",(0,r.jsx)(n.h2,{id:"begincommitrollback",children:"Begin/Commit/Rollback"}),"\n",(0,r.jsxs)(n.p,{children:["All scripts are executed as a ",(0,r.jsx)(n.strong,{children:"transaction"})," by default, even if they are not explicitly wrapped in a ",(0,r.jsx)(n.code,{children:"begin"})," / ",(0,r.jsx)(n.code,{children:"commit"})," / ",(0,r.jsx)(n.code,{children:"rollback"})," block."]}),"\n",(0,r.jsxs)(n.p,{children:["However, if you need ",(0,r.jsx)(n.strong,{children:"finer control"})," over when a transaction should be committed or rolled back\u2014or if you want to ",(0,r.jsx)(n.strong,{children:"customize the default transaction behavior"}),"\u2014you can use a ",(0,r.jsx)(n.code,{children:"begin"})," block."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'begin\n  let balance = get "wallet:user123"\n  if balance < 100 then\n    rollback # Insufficient funds\n  end\n  let balance = balance - 100\n  set "wallet:user123" balance\n  commit\nend\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Using ",(0,r.jsx)(n.code,{children:"begin"})," gives you full control over ",(0,r.jsx)(n.strong,{children:"when to finalize"})," or ",(0,r.jsx)(n.strong,{children:"cancel"})," a transaction based on your logic. Check the ",(0,r.jsx)(n.a,{href:"/docs/distributed-keyvalue-store/transactions",children:"transactions section"})," for more information about the customization options."]}),"\n",(0,r.jsx)(n.h2,{id:"let",children:"Let"}),"\n",(0,r.jsxs)(n.p,{children:["Allows assigning values to variables. If the variable does not exist, it is ",(0,r.jsx)(n.strong,{children:"automatically created"})," in the script's ",(0,r.jsx)(n.strong,{children:"temporary execution scope"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"let score = 100 # temp score variable\nlet score = score + 50\n"})}),"\n",(0,r.jsxs)(n.p,{children:["In this example, ",(0,r.jsx)(n.code,{children:"score"})," is declared and assigned a value. You can reassign it freely during the script's execution, but it will cease to exist once the script ends."]}),"\n",(0,r.jsxs)(n.p,{children:["If a value needs to be ",(0,r.jsx)(n.strong,{children:"persisted beyond the script's execution"}),", you must use the ",(0,r.jsx)(n.a,{href:"/docs/scripts/commands/set",children:(0,r.jsx)(n.code,{children:"set"})})," or ",(0,r.jsx)(n.a,{href:"/docs/scripts/commands/eset",children:(0,r.jsx)(n.code,{children:"eset"})})," functions."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"set(key, value)"})," stores the value durably (persistent mode)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"eset(key, value)"})," stores the value in ephemeral mode (in-memory only)."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"let level = 5\nset `player:123:level` level  # Persist the value to disk\n"})}),"\n",(0,r.jsx)(n.p,{children:"These functions ensure that the data is stored in the key/value store and available after the script completes."}),"\n",(0,r.jsx)(n.h2,{id:"throw",children:"Throw"}),"\n",(0,r.jsxs)(n.p,{children:["This control structure allows you to ",(0,r.jsx)(n.strong,{children:"raise an exception"})," that is propagated back to the client. When ",(0,r.jsx)(n.code,{children:"throw"})," is called, it automatically triggers a ",(0,r.jsx)(n.strong,{children:"rollback"})," of the transaction, undoing any uncommitted modifications."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'begin\n  let balance = get "wallet:user123"\n  if balance < 100 then\n    throw "Insufficient funds"\n  end\n  let balance = balance - 100\n  set "wallet:user123" balance\n  commit\nend\n'})}),"\n",(0,r.jsx)(n.p,{children:"This ensures that errors are clearly communicated and that no partial updates are applied when something goes wrong."}),"\n",(0,r.jsx)(n.h2,{id:"return",children:"Return"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"return"})," statement allows you to ",(0,r.jsx)(n.strong,{children:"send a value back to the client"})," or simply ",(0,r.jsx)(n.strong,{children:"stop the execution"})," of a script early."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'return "Done"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"set `config/connection-info` 'mysql://localserver-internal' nx\nif not set then\n  return \"Connection was already set\"\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.code,{children:"return"})," to control script flow and deliver results directly from within your Kahuna Script logic."]}),"\n",(0,r.jsx)(n.h2,{id:"sleep",children:"Sleep"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"sleep"})," command instructs the script to ",(0,r.jsx)(n.strong,{children:"pause execution"})," for the specified number of ",(0,r.jsx)(n.strong,{children:"milliseconds"}),". This can be useful for applying ",(0,r.jsx)(n.strong,{children:"throttling"}),", waiting for external coordination, or introducing slight delays between operations."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"sleep 200  # pauses execution for 200 milliseconds\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Use with care, as ",(0,r.jsx)(n.strong,{children:"long sleep durations can impact performance"})," and increase the risk of timeouts, especially in high-throughput systems."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var t=s(6540);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);