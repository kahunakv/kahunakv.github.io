"use strict";(self.webpackChunkkahunakv_docs=self.webpackChunkkahunakv_docs||[]).push([[8947],{1345:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"distributed-keyvalue-store/transactions","title":"Transactions","description":"Transaction Options","source":"@site/docs/distributed-keyvalue-store/transactions.md","sourceDirName":"distributed-keyvalue-store","slug":"/distributed-keyvalue-store/transactions","permalink":"/docs/distributed-keyvalue-store/transactions","draft":false,"unlisted":false,"editUrl":"https://github.com/kahunakv/kahunakv.github.io/tree/main/docs/docs/distributed-keyvalue-store/transactions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Revisions","permalink":"/docs/distributed-keyvalue-store/revisions"},"next":{"title":"Distributed Sequencer","permalink":"/docs/distributed-sequencer"}}');var t=s(4848),r=s(8453);const c={},o="Transactions",l={},a=[{value:"Transaction Options",id:"transaction-options",level:2},{value:"Timeout",id:"timeout",level:3},{value:"Locking",id:"locking",level:3},{value:"asyncRelease",id:"asyncrelease",level:3},{value:"autoCommit",id:"autocommit",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"transactions",children:"Transactions"})}),"\n",(0,t.jsx)(n.h2,{id:"transaction-options",children:"Transaction Options"}),"\n",(0,t.jsxs)(n.p,{children:["You can specify ",(0,t.jsx)(n.strong,{children:"transaction options"})," to fine-tune how the script is executed:"]}),"\n",(0,t.jsx)(n.h3,{id:"timeout",children:"Timeout"}),"\n",(0,t.jsxs)(n.p,{children:["Specifies the ",(0,t.jsx)(n.strong,{children:"maximum duration (in milliseconds)"})," that the transaction is allowed to run.\nIf the transaction does not complete within this time, it will be ",(0,t.jsx)(n.strong,{children:"automatically rolled back"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Kahuna Scripts are designed for ",(0,t.jsx)(n.strong,{children:"short executions"}),", so increasing this value significantly is ",(0,t.jsx)(n.strong,{children:"not recommended"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Default value:"})," ",(0,t.jsx)(n.code,{children:"5000ms"})]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"begin (timeout=3000)\n  set `config1` 'some value 1'\n  set `config2` 'some value 2'\n  set `config3` 'some value 3'\n  commit\nend\n"})}),"\n",(0,t.jsx)(n.h3,{id:"locking",children:"Locking"}),"\n",(0,t.jsxs)(n.p,{children:["Defines the ",(0,t.jsx)(n.strong,{children:"locking strategy"})," used by the transaction."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"pessimistic"}),": Locks keys upfront to ensure full consistency."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"optimistic"}),": Locks only on write, with version validation during commit."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Default value:"})," ",(0,t.jsx)(n.code,{children:"pessimistic"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"begin (locking=\"optimistic\")\n  set `config1` 'some value 1'\n  set `config2` 'some value 2'\n  set `config3` 'some value 3'\n  commit\nend\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"asyncrelease",children:"asyncRelease"}),"\n",(0,t.jsxs)(n.p,{children:["Indicates whether acquired locks should be ",(0,t.jsx)(n.strong,{children:"released asynchronously"})," (in the background) or ",(0,t.jsx)(n.strong,{children:"synchronously"})," (blocking the client until fully released)."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"true"}),": Faster response to the client, locks released in background."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"false"}),": Locks must be released before returning to the client."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Default value:"})," ",(0,t.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"begin (asyncRelease=\"true\")\n  set `config1` 'some value 1'\n  set `config2` 'some value 2'\n  set `config3` 'some value 3'\n  commit\nend\n"})}),"\n",(0,t.jsx)(n.h3,{id:"autocommit",children:"autoCommit"}),"\n",(0,t.jsxs)(n.p,{children:["Specifies whether an ",(0,t.jsxs)(n.strong,{children:["implicit ",(0,t.jsx)(n.code,{children:"commit"})]})," should be executed automatically if all operations in the transaction succeed, or if an ",(0,t.jsxs)(n.strong,{children:["explicit ",(0,t.jsx)(n.code,{children:"commit"})]})," is required to finalize the transaction."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"true"}),": The transaction will ",(0,t.jsx)(n.strong,{children:"automatically commit"})," if no errors occur."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"false"}),": A manual ",(0,t.jsx)(n.code,{children:"commit()"})," is required to indicate when the transaction should be finalized."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Default behavior:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"false"})," when using a ",(0,t.jsx)(n.code,{children:"begin"})," block"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"true"})," when no ",(0,t.jsx)(n.code,{children:"begin"})," block is used"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"begin (autoCommit=false)\n  ...\n  commit\nend\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This option is useful when you want full control over ",(0,t.jsx)(n.strong,{children:"when"})," and ",(0,t.jsx)(n.strong,{children:"under what conditions"})," the transaction is committed."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:["These options provide greater flexibility and control over ",(0,t.jsx)(n.strong,{children:"performance"}),", ",(0,t.jsx)(n.strong,{children:"consistency"}),", and ",(0,t.jsx)(n.strong,{children:"responsiveness"})," in your Kahuna transactions."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>o});var i=s(6540);const t={},r=i.createContext(t);function c(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);