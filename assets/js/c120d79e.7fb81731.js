"use strict";(self.webpackChunkkahunakv_docs=self.webpackChunkkahunakv_docs||[]).push([[5512],{3516:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"scripts/types","title":"Types","description":"Kahuna Script is a dynamically typed language, which means that by default there is no need to specify the type of a variable, as this will be determined at runtime.","source":"@site/docs/scripts/types.md","sourceDirName":"scripts","slug":"/scripts/types","permalink":"/docs/scripts/types","draft":false,"unlisted":false,"editUrl":"https://github.com/kahunakv/kahunakv.github.io/tree/main/docs/scripts/types.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Basic Syntax","permalink":"/docs/scripts/basic-syntax"},"next":{"title":"Expressions","permalink":"/docs/scripts/expressions"}}');var i=s(4848),a=s(8453);const r={},l="Types",c={},o=[{value:"Int64",id:"int64",level:2},{value:"Float64",id:"float64",level:2},{value:"String",id:"string",level:2},{value:"Booleans",id:"booleans",level:2},{value:"Null",id:"null",level:2},{value:"Arrays",id:"arrays",level:2},{value:"Bytes",id:"bytes",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"types",children:"Types"})}),"\n",(0,i.jsx)(n.p,{children:"Kahuna Script is a dynamically typed language, which means that by default there is no need to specify the type of a variable, as this will be determined at runtime."}),"\n",(0,i.jsxs)(n.p,{children:["Every single expression in ",(0,i.jsx)(n.strong,{children:"Kahuna Script"})," has one of the following built-in types depending on its value:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"null"}),"\n",(0,i.jsx)(n.li,{children:"bool"}),"\n",(0,i.jsx)(n.li,{children:"int64"}),"\n",(0,i.jsx)(n.li,{children:"float64"}),"\n",(0,i.jsx)(n.li,{children:"string"}),"\n",(0,i.jsx)(n.li,{children:"array"}),"\n",(0,i.jsx)(n.li,{children:"bytes"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"These data types can be used in scripts or key/value pairs as needed."}),"\n",(0,i.jsx)(n.h2,{id:"int64",children:"Int64"}),"\n",(0,i.jsx)(n.p,{children:"Represents an integer in the range of -9,223,372,036,854,775,808 to 9,223,372,036,854,775,808."}),"\n",(0,i.jsx)(n.p,{children:"This corresponds to a 64-bit signed integer, commonly used for IDs, counters, timestamps, and arithmetic operations in Kahuna Script."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-visual-basic",children:"let year = 2050\nlet remaining_tokens = 50\n"})}),"\n",(0,i.jsx)(n.h2,{id:"float64",children:"Float64"}),"\n",(0,i.jsx)(n.p,{children:"Represents a floating-point number in the range of approximately \xb15.0 \xd7 10\u207b\xb3\xb2\u2074 to \xb11.7 \xd7 10\xb3\u2070\u2078."}),"\n",(0,i.jsx)(n.p,{children:"This corresponds to a 64-bit IEEE 754 double-precision float, allowing for very large or very small real numbers with decimal precision\u2014useful for calculations, measurements, percentages and scientific data in Kahuna Script."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-visual-basic",children:"let threshold = 0.5\nlet weighted_load = 1.25\n"})}),"\n",(0,i.jsx)(n.h2,{id:"string",children:"String"}),"\n",(0,i.jsx)(n.p,{children:"Strings are immutable and use UTF-8 encoding. Used for text values, e.g., \"hello\" or 'user123':"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-visual-basic",children:'let name = "Andres"\nlet robot = "Voltron"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"booleans",children:"Booleans"}),"\n",(0,i.jsxs)(n.p,{children:["Represent a ",(0,i.jsx)(n.code,{children:"true"})," or ",(0,i.jsx)(n.code,{children:"false"})," value:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-visual-basic",children:"let is_active = false\n"})}),"\n",(0,i.jsx)(n.h2,{id:"null",children:"Null"}),"\n",(0,i.jsx)(n.p,{children:"Represents the absence of a value, e.g., null"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-visual-basic",children:"let last_leader = null\n"})}),"\n",(0,i.jsx)(n.h2,{id:"arrays",children:"Arrays"}),"\n",(0,i.jsx)(n.p,{children:'An array can contain elements of a single type or a mix of any supported types in Kahuna, e.g., [1, 2, 3], ["a", "b", "c"] or ["hello", false, 100.2]'}),"\n",(0,i.jsx)(n.p,{children:"Arrays are useful for grouping values, iterating over elements, or returning structured data from a script."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-visual-basic",children:'let statuses = ["active", "inactive"]\n'})}),"\n",(0,i.jsx)(n.h2,{id:"bytes",children:"Bytes"}),"\n",(0,i.jsx)(n.p,{children:"By default all values stored in the key/value store are byte streams but they can be converted to\nthe previously mentioned types for ease of manipulation:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-visual-basic",children:"let my_config = get `config/connection-settings`\nreturn is_bytes(my_config) # true\n"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var t=s(6540);const i={},a=t.createContext(i);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);