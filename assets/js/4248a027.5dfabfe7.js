"use strict";(self.webpackChunkkahunakv_docs=self.webpackChunkkahunakv_docs||[]).push([[947],{1345:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"distributed-keyvalue-store/transactions","title":"Distributed Transactions","description":"What is Two-Phase Commit (2PC)?","source":"@site/docs/distributed-keyvalue-store/transactions.md","sourceDirName":"distributed-keyvalue-store","slug":"/distributed-keyvalue-store/transactions","permalink":"/docs/distributed-keyvalue-store/transactions","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/distributed-keyvalue-store/transactions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Compare-And-Swap (CAS)","permalink":"/docs/distributed-keyvalue-store/cas"},"next":{"title":"Scripts","permalink":"/docs/scripts"}}');var n=t(4848),o=t(8453);const i={},a="Distributed Transactions",c={},d=[{value:"What is Two-Phase Commit (2PC)?",id:"what-is-two-phase-commit-2pc",level:2},{value:"<strong>How 2PC Works in Kahuna:</strong>",id:"how-2pc-works-in-kahuna",level:3},{value:"<strong>Phase 1: Prepare (Pre-Commit)</strong>",id:"phase-1-prepare-pre-commit",level:4},{value:"<strong>Phase 2: Commit or Rollback</strong>",id:"phase-2-commit-or-rollback",level:4}];function l(e){const s={h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"distributed-transactions",children:"Distributed Transactions"})}),"\n",(0,n.jsx)(s.h2,{id:"what-is-two-phase-commit-2pc",children:"What is Two-Phase Commit (2PC)?"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"2PC"})," is a distributed transaction protocol that ensures ",(0,n.jsx)(s.strong,{children:"atomicity across multiple independent nodes."})]}),"\n",(0,n.jsx)(s.h3,{id:"how-2pc-works-in-kahuna",children:(0,n.jsx)(s.strong,{children:"How 2PC Works in Kahuna:"})}),"\n",(0,n.jsx)(s.h4,{id:"phase-1-prepare-pre-commit",children:(0,n.jsx)(s.strong,{children:"Phase 1: Prepare (Pre-Commit)"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["The node that receives the transaction is assigned as ",(0,n.jsx)(s.strong,{children:"transaction coordinator"}),". It sends a ",(0,n.jsx)(s.strong,{children:"prepare request"})," to all participating nodes."]}),"\n",(0,n.jsxs)(s.li,{children:["Each Kahuna node ",(0,n.jsx)(s.strong,{children:"locks the resources"})," (e.g., temporary key with a lease)."]}),"\n",(0,n.jsxs)(s.li,{children:["If all nodes agree, they respond ",(0,n.jsx)(s.strong,{children:'"Ready to Commit"'}),"."]}),"\n"]}),"\n",(0,n.jsx)(s.h4,{id:"phase-2-commit-or-rollback",children:(0,n.jsx)(s.strong,{children:"Phase 2: Commit or Rollback"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["If all nodes respond ",(0,n.jsx)(s.strong,{children:"successfully"}),", the coordinator sends a ",(0,n.jsx)(s.strong,{children:"commit request"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["If ",(0,n.jsx)(s.strong,{children:"any cluster fails"}),", the coordinator sends a ",(0,n.jsx)(s.strong,{children:"rollback request"}),"."]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"This ensures either ALL updates succeed or NONE happen."}),"\n",(0,n.jsx)(s.hr,{})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>a});var r=t(6540);const n={},o=r.createContext(n);function i(e){const s=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);